diff --git a/node_modules/@railgun-community/waku-relayer-client-web/dist/waku/waku-relayer-waku-core.d.ts b/node_modules/@railgun-community/waku-relayer-client-web/dist/waku/waku-relayer-waku-core.d.ts
index 6e277ec..dcf9e70 100644
--- a/node_modules/@railgun-community/waku-relayer-client-web/dist/waku/waku-relayer-waku-core.d.ts
+++ b/node_modules/@railgun-community/waku-relayer-client-web/dist/waku/waku-relayer-waku-core.d.ts
@@ -1,18 +1,19 @@
-import { Chain } from '@railgun-community/shared-models';
-import { RelayNode } from '@waku/interfaces';
-import { RelayerOptions } from '../models/index.js';
+import { Chain } from "@railgun-community/shared-models";
+import { RelayNode } from "@waku/interfaces";
+import { RelayerOptions } from "../models/index.js";
+export type Optional<T> = T | undefined;
 export declare class WakuRelayerWakuCore {
-    static hasError: boolean;
-    static waku: Optional<RelayNode>;
-    private static pubSubTopic;
-    private static additionalDirectPeers;
-    private static peerDiscoveryTimeout;
-    static initWaku: (chain: Chain) => Promise<void>;
-    static reinitWaku: (chain: Chain) => Promise<void>;
-    static setRelayerOptions(relayerOptions: RelayerOptions): void;
-    static disconnect: () => Promise<void>;
-    private static connect;
-    static getMeshPeerCount(): number;
-    private static waitForRemotePeer;
-    static relayMessage(data: object, contentTopic: string): Promise<void>;
+	static hasError: boolean;
+	static waku: Optional<RelayNode>;
+	private static pubSubTopic;
+	private static additionalDirectPeers;
+	private static peerDiscoveryTimeout;
+	static initWaku: (chain: Chain) => Promise<void>;
+	static reinitWaku: (chain: Chain) => Promise<void>;
+	static setRelayerOptions(relayerOptions: RelayerOptions): void;
+	static disconnect: () => Promise<void>;
+	private static connect;
+	static getMeshPeerCount(): number;
+	private static waitForRemotePeer;
+	static relayMessage(data: object, contentTopic: string): Promise<void>;
 }
